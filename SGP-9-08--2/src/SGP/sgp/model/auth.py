#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation
from sqlalchemy.orm import relationship
from sqlalchemy.orm import backref

engine = create_engine('postgres://postgres:a@localhost:5432/sgpdb')
DeclarativeBase = declarative_base()
metadata = DeclarativeBase.metadata
metadata.bind = engine

try:
    from sqlalchemy.dialects.postgresql import *
except ImportError:
    from sqlalchemy.databases.postgres import *
atributo = Table(u'atributo', metadata,
    Column(u'id_atributo', INTEGER(), primary_key=True, nullable=False),
    Column(u'id_item', INTEGER(), ForeignKey('item.id_item'), nullable=False),
    Column(u'id_campo', INTEGER(), ForeignKey('campo.id_campo'), nullable=False),
    Column(u'valor', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
)

item = Table(u'item', metadata,
    Column(u'id_item', INTEGER(), primary_key=True, nullable=False),
    Column(u'codigo', INTEGER()),
    Column(u'identificador', VARCHAR(length=45, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'observacion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'estado', INTEGER(), nullable=False),
    Column(u'complejidad', INTEGER(), nullable=False),
    Column(u'id_fase', INTEGER(), ForeignKey('fase.id_fase'), nullable=False),
    Column(u'id_linea_base', INTEGER(), ForeignKey('linea_base.id_linea_base')),
    Column(u'id_tipo_item', INTEGER(), ForeignKey('tipo_item.id_tipo_item'), nullable=False),
    Column(u'descripcion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    Column(u'version', INTEGER(), nullable=False),
)

permiso_recurso = Table(u'permiso_recurso', metadata,
    Column(u'id_permiso_recurso', INTEGER(), primary_key=True, nullable=False),
    Column(u'id_permiso', INTEGER(), ForeignKey('permiso.id_permiso'), nullable=False),
    Column(u'id_recurso', INTEGER(), ForeignKey('recurso.id_recurso'), nullable=False),
    Column(u'rol_usuario', INTEGER(), ForeignKey('rol_usuario.id_rol_usuario'), nullable=False),
)

linea_base = Table(u'linea_base', metadata,
    Column(u'id_linea_base', INTEGER(), primary_key=True, nullable=False),
    Column(u'estado', INTEGER(), nullable=False),
    Column(u'fecha', DATE(), nullable=False),
    Column(u'usuario', INTEGER(), ForeignKey('usuario.id_usuario'), nullable=False),
    Column(u'fase', INTEGER(), ForeignKey('fase.id_fase'), nullable=False),
)

recurso = Table(u'recurso', metadata,
    Column(u'id_recurso', INTEGER(), primary_key=True, nullable=False),
    Column(u'tipo', INTEGER(), nullable=False),
    Column(u'id_fase', INTEGER(), ForeignKey('fase.id_fase')),
    Column(u'id_proyecto', INTEGER(), ForeignKey('proyecto.id_proyecto')),
)

rol_permiso = Table(u'rol_permiso', metadata,
    Column(u'id_rol', INTEGER(), ForeignKey('rol.id_rol'), primary_key=True, nullable=False),
    Column(u'id_permiso', INTEGER(), ForeignKey('permiso.id_permiso'), primary_key=True, nullable=False),
)

rol_usuario = Table(u'rol_usuario', metadata,
    Column(u'id_rol_usuario', INTEGER(), primary_key=True, nullable=False),
    Column(u'id_rol', INTEGER(), ForeignKey('rol.id_rol'), nullable=False),
    Column(u'id_usuario', INTEGER(), ForeignKey('usuario.id_usuario'), nullable=False),
)

class Adjunto(DeclarativeBase):
    __tablename__ = 'adjunto'

    #column definitions
    archivo = Column(u'archivo', LargeBinary(length=None))
    id_adjunto = Column(u'id_adjunto', INTEGER(), primary_key=True, nullable=False)
    id_item = Column(u'id_item', INTEGER(), ForeignKey('item.id_item'), nullable=False)
    tipo_archivo = Column(u'tipo_archivo', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=30, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class Atributo(DeclarativeBase):
    __table__ = atributo
    id_atributo = Column(u'id_atributo', INTEGER(), primary_key=True, nullable=False),
    id_item = Column(u'id_item', INTEGER(), ForeignKey('item.id_item'), nullable=False),
    id_campo = Column(u'id_campo', INTEGER(), ForeignKey('campo.id_campo'), nullable=False),
    valor = Column(u'valor', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),

    #relation definitions
    campo = relationship("Campo", backref=backref("atributo", uselist=False))


class Campo(DeclarativeBase):
    __tablename__ = 'campo'

    #column definitions
    id_campo = Column(u'id_campo', INTEGER(), primary_key=True, nullable=False)
    id_tipo_item = Column(u'id_tipo_item', INTEGER(), ForeignKey('tipo_item.id_tipo_item'), nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=30, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    tipo_dato = Column(u'tipo_dato', INTEGER(), nullable=False)

    #relation definitions


class Fase(DeclarativeBase):
    __tablename__ = 'fase'

    #column definitions
    descripcion = Column(u'descripcion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    id_fase = Column(u'id_fase', INTEGER(), primary_key=True, nullable=False)
    id_proyecto = Column(u'id_proyecto', INTEGER(), ForeignKey('proyecto.id_proyecto'), nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=45, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions
    items = relationship("Item", backref="fase")


class Item(DeclarativeBase):
    __tablename__ = 'item'

    #column definitions
    id_item = Column(u'id_item', INTEGER(), primary_key=True, nullable=False),
    codigo = Column(u'codigo', INTEGER()),
    identificador = Column(u'identificador', VARCHAR(length=45, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    observacion = Column(u'observacion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    estado = Column(u'estado', INTEGER(), nullable=False),
    complejidad = Column(u'complejidad', INTEGER(), nullable=False),
    id_fase = Column(u'id_fase', INTEGER(), ForeignKey('fase.id_fase'), nullable=False),
    id_linea_base = Column(u'id_linea_base', INTEGER(), ForeignKey('linea_base.id_linea_base')),
    id_tipo_item = Column(u'id_tipo_item', INTEGER(), ForeignKey('tipo_item.id_tipo_item'), nullable=False),
    descripcion = Column(u'descripcion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    version = Column(u'version', INTEGER(), nullable=False),

    #relation definitions
    adjuntos = relationship("Adjunto", backref="item")
    atributos = relationship("Atributo", backref="item")

class LineaBase(DeclarativeBase):
    __table__ = linea_base

    id_linea_base = Column(u'id_linea_base', INTEGER(), primary_key=True, nullable=False),
    estado = Column(u'estado', INTEGER(), nullable=False),
    fecha = Column(u'fecha', DATE(), nullable=False),
    usuario = Column(u'usuario', INTEGER(), ForeignKey('usuario.id_usuario'), nullable=False),
    fase = Column(u'fase', INTEGER(), ForeignKey('fase.id_fase'), nullable=False),

    #relation definitions
    items = relationship("Item", backref="linea_base")


class Permiso(DeclarativeBase):
    __tablename__ = 'permiso'

    #column definitions
    descripcion = Column('descripcion', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    id_permiso = Column('id_permiso', INTEGER(), primary_key=True, nullable=False)
    nombre = Column('nombre', VARCHAR(length=45, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    tipo = Column('tipo', INTEGER(), nullable=False)

    #relation definitions


class Proyecto(DeclarativeBase):
    __tablename__ = 'proyecto'

    #column definitions
    administrador = Column(u'administrador', INTEGER(), ForeignKey('usuario.id_usuario'), nullable=False)
    descripcion = Column(u'descripcion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    id_proyecto = Column(u'id_proyecto', INTEGER(), primary_key=True, nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=100, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions
    fases = relationship("Fase", backref="proyecto")
    
class PermisoRecurso(DeclarativeBase):
    __table__ = permiso_recurso

    
    #relation definitions
    permiso = relationship("Permiso", backref=backref("permiso_recurso", uselist=False))
    recurso = relationship("Recurso", backref=backref("permiso_recurso", uselist=False))
    
class Recurso(DeclarativeBase):
    __table__ = recurso
    id_recurso = Column(u'id_recurso', INTEGER(), primary_key=True, nullable=False),
    tipo = Column(u'tipo', INTEGER(), nullable=False),
    id_fase = Column(u'id_fase', INTEGER(), ForeignKey('fase.id_fase')),
    id_proyecto = Column(u'id_proyecto', INTEGER(), ForeignKey('proyecto.id_proyecto')),
    #relation definitions
    

class Relacion(DeclarativeBase):
    __tablename__ = 'relacion'

    #column definitions
    id_item1 = Column(u'id_item1', INTEGER(), ForeignKey('item.id_item'), primary_key=True, nullable=False)
    id_item2 = Column(u'id_item2', INTEGER(), ForeignKey('item.id_item'), primary_key=True, nullable=False)
    tipo_relacion = Column(u'tipo_relacion', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Rol(DeclarativeBase):
    __tablename__ = 'rol'

    #column definitions
    descripcion = Column(u'descripcion', TEXT(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    id_rol = Column(u'id_rol', INTEGER(), primary_key=True, nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=45, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions
    permisos = relationship("Permiso", secondary = rol_permiso)
    

class TipoItem(DeclarativeBase):
    __tablename__ = 'tipo_item'

    #column definitions
    id_fase = Column(u'id_fase', INTEGER(), ForeignKey('fase.id_fase'), nullable=False)
    id_tipo_item = Column(u'id_tipo_item', INTEGER(), primary_key=True, nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=30, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class Usuario(DeclarativeBase):
    __tablename__ = 'usuario'

    #column definitions
    id_usuario = Column(u'id_usuario', INTEGER(), primary_key=True, nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=45, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    password = Column(u'password', VARCHAR(length=35, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    telefono = Column(u'telefono', VARCHAR(length=20, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    usuario = Column(u'usuario', VARCHAR(length=20, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions
    roles = relationship("RolUsuario", backref="usuario")
    

class RolUsuario(DeclarativeBase):
    __table__ = rol_usuario
    #relation definitions
    permisos_recursos = relationship("PermisoRecurso")
